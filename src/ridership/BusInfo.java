package ridership;

import java.io.*;
import java.util.ArrayList;
import java.util.Scanner;

//This Class is used to create objects specifically for ridership files
//It is a good base class to start with when getting emissions because it contains
//all of the basic information needed and the people boarding as well
//Will also generate usable distances and speeds between stops
public class BusInfo {
	//Variables
	//All come from ridership file output which can be created using BusTest.java
	private String list_number;
	private String unknown;
	private String specific_route1;
	private int specific_route2;
	private int bus_id; //this is the bus line
	private String arrival_time;
	private String departure_time;
	private double hour_time; //given time in ridership file
	private double time_difference; //new time that can be used to calculate speed
	
	/*
	 * MAYBE USE THIS IN EMISSIONS FILE IF EASIER
	 */
	private double new_time; //this time will be used to take into account limits and maybe normal distribution
	//END OF NOTE
	
	private int stop_id;
	private int stop_sequence_number;
	private int peoplein;
	private int peopleout;
	private int peopleonbus;
	private int peoplewait;
	private double stopLineFactor;
	private double distance;
	private int speed;
	
	//Constructor
	public BusInfo(String businfo) {
		String[] array = businfo.split(",");
		list_number = array[0];
		unknown = array[1];
		specific_route1 = array[2];
		specific_route2 = Integer.parseInt(array[3]);
		bus_id = Integer.parseInt(array[4]);
		arrival_time = array[5];
		departure_time = array[6];
		hour_time = convertTime(arrival_time); //converted time so we can calculate with it
		time_difference = 0; //to initiate the time difference and so first ones are 0
		stop_id = Integer.parseInt(array[7]);
		stop_sequence_number = Integer.parseInt(array[8]);
		peoplein = Integer.parseInt(array[9]);
		peopleout = Integer.parseInt(array[10]);
		peopleonbus = Integer.parseInt(array[11]);
		peoplewait = Integer.parseInt(array[12]);
		stopLineFactor = Double.parseDouble(array[13]);
		
		//this allows to get distances only if they are in the last column of file
		//else we will fetch them from the distance files generated by ArcGIS
		if(14 < array.length) {
			distance = Double.parseDouble(array[14]);
		}
	}

	public String getList_number() {
		return list_number;
	}

	public String getUnknown() {
		return unknown;
	}

	public String getSpecific_route1() {
		return specific_route1;
	}

	public int getSpecific_route2() {
		return specific_route2;
	}

	public int getBus_id() {
		return bus_id;
	}
	
	public String getArrival_time() {
		return arrival_time;
	}

	public String getDeparture_time() {
		return departure_time;
	}

	public double getHour_time() {
		return hour_time;
	}

	public double getTime_difference() {
		return time_difference;
	}

	public double getNew_time() {
		return new_time;
	}

	public int getStop_id() {
		return stop_id;
	}

	public int getStop_sequence_number() {
		return stop_sequence_number;
	}

	public int getPeoplein() {
		return peoplein;
	}

	public int getPeopleout() {
		return peopleout;
	}

	public int getPeopleonbus() {
		return peopleonbus;
	}

	public int getPeoplewait() {
		return peoplewait;
	}

	public double getStopLineFactor() {
		return stopLineFactor;
	}
	
	public double getDistance() {
		return distance;
	}

	public int getSpeed() {
		return speed;
	}
	
	public void calculateSpeed() {
		if(time_difference == 0) {
			speed = 0;
		}
		else {
			speed = (int)Math.round(distance/time_difference);
		}
		
		//For speeds greater than 75, we will make them 75
		if(speed > 72) {
			speed = 72;
		}
		//For cases where speed is negative because the next time is less than the current time
		else if(speed < 0) {
			speed = 0;
		}
	}
	
	//This to string is used to make original files with distances which can then be used to create emission files
	public String toString() {
		return list_number + "," + unknown + "," + specific_route1 + "," + specific_route2 + "," + bus_id + "," + arrival_time
				+ "," + departure_time + "," + stop_id + "," + stop_sequence_number + "," + peoplein
				+ "," + peopleout + "," + peopleonbus + "," + peoplewait + "," + stopLineFactor + "," + distance;
	}
	
	/*
	 * EITHER PUT THIS IN BUSINFO FILE OR EMISSIONS FILE DEPENDING ON WHAT VARIABLES
	 * YOU NEED TO USE TO COMPUTE THE FINAL TIMES
	 */
	//This needs to be computed after the distances and speeds have been generated
	public void computeNewTime() {
		
	}
	
	/*
	 * This Function works now
	 * It takes in a bus line from a ridership file and the cross references it with
	 * the distance file generated by ArcGIS
	 * With the ridership file that includes the distances
	 * the final emissions file can then be generated
	 * There is an exception with bus line 33 distances that is taken into account
	 */
	public static void generateDistances(BusInfo[] busarray) throws IOException {
		File distancefile;
		for(int i = 0; i < busarray.length; i++) {
			
			/*
			 * THIS PORTION OF THE FUNCTION ACCOUNTS FOR MISTAKES IN DISTANCE FILES
			 */
			
			//THIS ACCOUNTS FOR THE EXCEPTION IN LINE 33
			//The exception is that two of the same bus lines end with different stop_ids
			//therefore depending on the last stop id, a different distance file is used
			if(busarray[i].getBus_id() == 33 && busarray[i].getStop_id() == 108511) {
				if(busarray[i+58].getStop_id() == 123053) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 33 + "-" + 108511 + "_1.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 33 + "-" + 108511 + "_2.txt");
				}
			}
			//end of the line 33 code
			
			//THIS ACCOUNTS FOR CHANGE AT 12 STOP SEQUENCE IN BUS LINE 103
			else if(busarray[i].getBus_id() == 103 && busarray[i].getStop_id() == 126991) {
				if(busarray[i+11].getStop_id() == 132982) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 103 + "-" + 126991 + "_1.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 103 + "-" + 126991 + "_2.txt");
				}
			}
			//end of line 103 code
			
			//THIS ACCOUNTS FOR DIFFERENT AMOUNT OF STOPS IN BuS LINE 107
			else if(busarray[i].getBus_id() == 107 && busarray[i].getStop_id() == 2700573) {
				if(busarray[i+40].getStop_id() == 1378472) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 107 + "-" + 2700573 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 107 + "-" + 2700573 + "_1.txt");
				}
			}
			//end of line 107 code
			
			//ACCOUNTS FOR DIFFERENT AMOUNT OF STOPs IN BUS LINE 11
			else if(busarray[i].getBus_id() == 11 && busarray[i].getStop_id() == 115463) {
				if(busarray[i+20].getStop_id() == 108804) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 11 + "-" + 115463 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 11 + "-" + 115463 + "_1.txt");
				}
			}
			//end of line 11 code
			
			//ACCOUNTS FOR DIFFERENT AMOUNT OF STOPS IN BUS LINE 115
			else if(busarray[i].getBus_id() == 115 && busarray[i].getStop_id() == 2001650) {
				if(busarray[i+9].getStop_id() == 136546) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 115 + "-" + 2001650 + "_1.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 115 + "-" + 2001650 + "_2.txt");
				}
			}
			//end of line 115 code
			
			//ACCOUNTS FOR DIFFERENT AMOUNT OF STOPS IN LINE 131
			else if(busarray[i].getBus_id() == 131 && busarray[i].getStop_id() == 120609) {
				if(busarray[i+12].getStop_id() == 1701312) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 131 + "-" + 120609 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 131 + "-" + 120609 + "_1.txt");
				}
			}
			//end of line 131 code
			
			//ACCOUNTS FOR DIFFERENT AMOUNT OF STOPS IN LINE 143-136678
			else if(busarray[i].getBus_id() == 143 && busarray[i].getStop_id() == 136678) {
				if(busarray[i+16].getStop_id() == 1801357) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 143 + "-" + 136678 + "_1.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 143 + "-" + 136678 + "_2.txt");
				}
			}
			
			//ACCOUNTS FOR CHANGE IN STOP SEQUENCE AT STOP 4 OF STOPS IN LINE 143-1801357
			else if(busarray[i].getBus_id() == 143 && busarray[i].getStop_id() == 1801357) {
				if(busarray[i+3].getStop_id() == 1801142) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 143 + "-" + 1801357 + "_1.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 143 + "-" + 1801357 + "_2.txt");
				}
			}
			//end of line 143
			
			//ACCOUNTS FOR CHANGE IN STOP SEQuENCE AT STOP 7 in line 148
			else if(busarray[i].getBus_id() == 148 && busarray[i].getStop_id() == 138842) {
				if(busarray[i+6].getStop_id() == 115052) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 148 + "-" + 138842 + "_1.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 148 + "-" + 138842 + "_2.txt");
				}
			}
			//end of line 148
			
			//ACCOUNTS FOR 3 Different files in line 166
			//CHANGED THE STOP ID OF 166-104562_2 of last stop so would not be the same
			else if(busarray[i].getBus_id() == 166 && busarray[i].getStop_id() == 104562) {
				if(busarray[i+33].getStop_id() == 110473) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 166 + "-" + 104562 + "_3.txt");
				}
				else if(busarray[i+33].getStop_id() == 1151832){
					distancefile = new File("inputs//Bus_Line_Distances//" + 166 + "-" + 104562 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 166 + "-" + 104562 + "_1.txt");
				}
			}
			//end of line 166
			
			//ACCOUNTS FOR DIFFERENT AMOUNT OF STOPS IN LINE 184
			else if(busarray[i].getBus_id() == 184 && busarray[i].getStop_id() == 130672) {
				if(busarray[i+12].getStop_id() == 132240) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 184 + "-" + 130672 + "_1.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 184 + "-" + 130672 + "_2.txt");
				}
			}
			
			else if(busarray[i].getBus_id() == 184 && busarray[i].getStop_id() == 132240) {
				if(busarray[i+12].getStop_id() == 130672) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 184 + "-" + 132240 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 184 + "-" + 132240 + "_1.txt");
				}
			}
			//end of line 184 code
			
			//ACCOUNTS FOR 186 different number stops but 43 is changed in 125579 for similarity
			else if(busarray[i].getBus_id() == 186 && busarray[i].getStop_id() == 125579) {
				if(busarray[i+42].getStop_id() == 1700757) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 186 + "-" + 125579 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 186 + "-" + 125579 + "_1.txt");
				}
			}
			//end of line 186 code
			
			//ACCOUNT FOR DIFFERENCE IN NUMBER OF STOPS FOR LINE 188
			else if(busarray[i].getBus_id() == 188 && busarray[i].getStop_id() == 143682) {
				if(busarray[i+35].getStop_id() == 1700757) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 188 + "-" + 143682 + "_1.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 188 + "-" + 143682 + "_2.txt");
				}
			}
			//end of line 188 code
			
			//ACCOUNT FOR DIFFERENT NUMBER OF STOPS IN LINE 194
			else if(busarray[i].getBus_id() == 194 && busarray[i].getStop_id() == 136309) {
				if(busarray[i+40].getStop_id() == 139171) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 194 + "-" + 136309 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 194 + "-" + 136309 + "_1.txt");
				}
			}
			//end of line 194 code
			
			//ACCOUNT FOR 3 DIFFERENT BUS STOPS IN LINE 166
			else if(busarray[i].getBus_id() == 194 && busarray[i].getStop_id() == 139171) {
				if(busarray[i+24].getStop_id() == 136309) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 194 + "-" + 139171 + "_2.txt");
				}
				else if(busarray[i+38].getStop_id() == 136309){
					distancefile = new File("inputs//Bus_Line_Distances//" + 194 + "-" + 139171 + "_3.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 194 + "-" + 139171 + "_1.txt");
				}
			}
			//end of line 166 code
			
			//ACCOUNT FOR DIFFERENT NUMBER OF STOPS IN LINE 197, changed 39 sequence on 2nd file because it was acting wierd
			else if(busarray[i].getBus_id() == 197 && busarray[i].getStop_id() == 111214) {
				if(busarray[i+39].getBus_id() != 197) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 197 + "-" + 111214 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 197 + "-" + 111214 + "_1.txt");
				}
			}
			//end of line 197 code
			
			//ACCOUNT FOR DIFFERENT NUMBER OF STOPS IN LINE 199, 29 sequence in second file changed
			else if(busarray[i].getBus_id() == 199 && busarray[i].getStop_id() == 120737) {
				if(busarray[i+28].getStop_id() == 1315042) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 199 + "-" + 120737 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 199 + "-" + 120737 + "_1.txt");
				}
			}
			//end of line 199 code
			
			//ACCOUNT FOR DIFFERENT NuMBER OF STOPS IN LINE 214
			else if(busarray[i].getBus_id() == 214 && busarray[i].getStop_id() == 1905838) {
				if(busarray[i+38].getStop_id() == 3601979) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 214 + "-" + 1905838 + "_1.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 214 + "-" + 1905838 + "_2.txt");
				}
			}
			//end of line 214 code
			
			//DIFFERENT NUMBER OF STOPS IN 214
			else if(busarray[i].getBus_id() == 214 && busarray[i].getStop_id() == 3601979) {
				if(busarray[i+45].getStop_id() == 1905838) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 214 + "-" + 3601979 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 214 + "-" + 3601979 + "_1.txt");
				}
			}
			//end of line 214 code
			
			//ACCOUNT FOR DIFFERENT NUMBER OF STOPS IN LINE 261
			else if(busarray[i].getBus_id() == 261 && busarray[i].getStop_id() == 3500162) {
				if(busarray[i+22].getStop_id() == 3800565) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 261 + "-" + 3500162 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 261 + "-" + 3500162 + "_1.txt");
				}
			}
			
			else if(busarray[i].getBus_id() == 261 && busarray[i].getStop_id() == 3800565) {
				if(busarray[i+20].getStop_id() == 3500162) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 261 + "-" + 3800565 + "_1.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 261 + "-" + 3800565 + "_2.txt");
				}
			}
			//end of line 261 code
			
			//ACCOUNT FOR 3 DIFFERENT LINES FOR LINE 34, changed first file stop sequence 31 for similarity
			else if(busarray[i].getBus_id() == 34 && busarray[i].getStop_id() == 135423) {
				if(busarray[i+1].getStop_id() == 137301) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 34 + "-" + 135423 + "_3.txt");
				}
				else if(busarray[i+30].getStop_id() == 1260922){
					distancefile = new File("inputs//Bus_Line_Distances//" + 34 + "-" + 135423 + "_1.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 34 + "-" + 135423 + "_2.txt");
				}
			}
			//end of line 34 code
			
			//ACCOUNT FOR DIFFERENT NUMBER OF STOPS IN LINE 372
			else if(busarray[i].getBus_id() == 372 && busarray[i].getStop_id() == 104362) {
				if(busarray[i+42].getStop_id() == 1110742) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 372 + "-" + 104362 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 372 + "-" + 104362 + "_1.txt");
				}
			}
			//end of line 372 code
			
			//ACCOUNT FOR DIFFERENT STOPS IN LINE 46
			else if(busarray[i].getBus_id() == 46 && busarray[i].getStop_id() == 133091) {
				if(busarray[i+9].getStop_id() == 110374) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 46 + "-" + 133091 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 46 + "-" + 133091 + "_1.txt");
				}
			}
			//end of line 46 code
			
			//ACCOUNT FOR DIFFERENT NUMbER OF STOPS IN LINE 460
			else if(busarray[i].getBus_id() == 460 && busarray[i].getStop_id() == 1601170) {
				if(busarray[i+24].getStop_id() == 3001711) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 460 + "-" + 1601170 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 460 + "-" + 1601170 + "_1.txt");
				}
			}
			
			else if(busarray[i].getBus_id() == 460 && busarray[i].getStop_id() == 3001711) {
				if(busarray[i+23].getStop_id() == 1601170) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 460 + "-" + 3001711 + "_1.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 460 + "-" + 3001711 + "_2.txt");
				}
			}
			//end of line 460 code
			
			//ACCOUNTS FOR ALL 3 DIFFERENT LINE 48 files, files 2 and 1 check stop ids are changed to make different
			else if(busarray[i].getBus_id() == 48 && busarray[i].getStop_id() == 103384) {
				if(busarray[i+42].getBus_id() != 48 || busarray[i+42].getStop_id() == 136832) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 48 + "-" + 103384 + "_2.txt");
				}
				else if(busarray[i+44].getBus_id() != 48){
					distancefile = new File("inputs//Bus_Line_Distances//" + 48 + "-" + 103384 + "_3.txt");
				}
				else if(busarray[i+46].getBus_id() != 48){
					distancefile = new File("inputs//Bus_Line_Distances//" + 48 + "-" + 103384 + "_1.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 48 + "-" + 103384 + "_4.txt");
				}
			}
			
			else if(busarray[i].getBus_id() == 48 && busarray[i].getStop_id() == 136832) {
				if(busarray[i+44].getStop_id() == 103384) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 48 + "-" + 136832 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 48 + "-" + 136832 + "_1.txt");
				}
			}
			
			else if(busarray[i].getBus_id() == 48 && busarray[i].getStop_id() == 139002) {
				if(busarray[i+42].getStop_id() == 103384) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 48 + "-" + 139002 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 48 + "-" + 139002 + "_1.txt");
				}
			}
			//end of line 48 code
			
			//ACCOUNT FOR DIFFERENT NUMbER OF STOPS IN LINE 52
			else if(busarray[i].getBus_id() == 52 && busarray[i].getStop_id() == 105562) {
				if(busarray[i+8].getStop_id() == 105918) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 52 + "-" + 105562 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 52 + "-" + 105562 + "_1.txt");
				}
			}
			
			else if(busarray[i].getBus_id() == 52 && busarray[i].getStop_id() == 105918) {
				if(busarray[i+6].getStop_id() == 105562) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 52 + "-" + 105918 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 52 + "-" + 105918 + "_1.txt");
				}
			}
			//end of line 52 code
			
			//ACCOUNT FOR THE 4 DIFFERENT FILES IN 68
			else if(busarray[i].getBus_id() == 68 && busarray[i].getStop_id() == 102496) {
				if(busarray[i+72].getStop_id() == 36013542) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 68 + "-" + 102496 + "_3.txt");
				}
				else if(busarray[i+77].getStop_id() == 3700424){
					distancefile = new File("inputs//Bus_Line_Distances//" + 68 + "-" + 102496 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 68 + "-" + 102496 + "_1.txt");
				}
			}
			//end of line 68 code
			
			//ACCOUNT FOR DIFFERENT NUMbER OF STOPS IN LINE 93
			else if(busarray[i].getBus_id() == 93 && busarray[i].getStop_id() == 111734) {
				if(busarray[i+20].getStop_id() == 1319722) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 93 + "-" + 111734 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 93 + "-" + 111734 + "_1.txt");
				}
			}
			//end of line 93 code
			
			//ACCOUNT FOR DIFFERENT NUMBER OF STOPS IN LINE 747
			else if(busarray[i].getBus_id() == 747 && busarray[i].getStop_id() == 143207) {
				if(busarray[i+11].getStop_id() == 1354502) {
					distancefile = new File("inputs//Bus_Line_Distances//" + 747 + "-" + 143207 + "_2.txt");
				}
				else {
					distancefile = new File("inputs//Bus_Line_Distances//" + 747 + "-" + 143207 + "_1.txt");
				}
			}
			//end of line 747 code
			
			/*
			 * END OF MISTAKES IN DISTANCE FILES
			 */
			
			//Now we proceed as normal from here and take file based on bus id and initial stop id
			else{
			distancefile = new File("inputs//Bus_Line_Distances//" + busarray[i].getBus_id() + "-" 
											+ busarray[i].getStop_id() + ".txt");
			}
			
			//Here we make sure that the file exists before using it as a caution
			if(distancefile.exists()) {
				//We create a distance array from the GISDistance class
				//the distances are also fixed so that they are no longer cummulative
				//the distances are also fixed to be distance till next stop and each distance is converted to miles
				//this is all done in the fixdistance() function in the GISDistance class
				GISDistance[] distancearray = createDistanceArray(distancefile);
				
				//We copy over the distances from the distance array to the businfo object
				for(int j = 0; j < distancearray.length; j++) {
					System.out.println(i + " " + busarray[i].getStop_id() + " " + distancearray[j].getStop_id() + " lol " + j);
					
					//case for if we just have extra after the last point in the array
					if (i >= busarray.length - 1) {
						i++;
						break;
					}
					
					//this is the regular case to copy over the bus distance to the proper stod id/bus line
					else if(busarray[i].getStop_id() == distancearray[j].getStop_id()) {
						busarray[i].distance = distancearray[j].getDistancenext();
						i++;
						
						//if there are more distances at end of bus array than bus array itself need to break loop
						if(busarray[i].getBus_id() != busarray[i-1].getBus_id()) {
							break;
						}
					}
				}

				/*
				 * THIS PORTION OF THE CODE SHOULD NOT BE USED ANYMORE BUT WAS LEFT HERE JUST IN CASE
				 * THERE IS A PROBLEM WHEN THE LARGE TOTAL EMISSIONS FILE IS COMPUTED
				 * */
				//this accounts for if there are extra stops at the end of a line which dont have distances calculated
				//certain files have same starting line and distance but have a few extra stops at the bottom
				//will need to check for these manually
				//Also accounts for if there are 2 of the same bus lines in sequential order
				//so that it does not just calculate zeros through the entire array
				while(i < busarray.length - 1 && busarray[i].getBus_id() == busarray[i-1].getBus_id()
						&& busarray[i].getStop_sequence_number() > busarray[i-1].getStop_sequence_number()) {
					i++;
				}
				i--; //to account for original i++ in loop
			}
		}
	}
	
	//creates an array with fixed distance for previous function generateDistances()
	private static GISDistance[] createDistanceArray(File file) throws IOException {
		Object[] testarray = GISDistance.createArray(file);
		GISDistance[] array = (GISDistance[])testarray;
		GISDistance.fixDistance(array);
		return array;
	}
	
	private static double convertTime(String arrivaltime) {
		String[] timearray = arrivaltime.split(":");
		int hour = Integer.parseInt(timearray[0]);
		int minute = Integer.parseInt(timearray[1]);
		//seconds are always 0 so we'll leave out for now
		//int second = Integer.parseInt(timearray[2]);
		double time = hour + minute/60.0;
		return time;
	}

	//trying to make this function but problems arise when trying to change
	//to different object type names without explicitly writing them in the function
	public static ArrayList<Object> createArraylist(File filename) throws FileNotFoundException {
		Scanner in = createScannerComma(filename);
		ArrayList<Object> arraylist = new ArrayList<Object>();
		in.nextLine();
			
		while(in.hasNextLine()) {
			arraylist.add(new BusInfo(in.nextLine()));
		}
		
		arraylist.trimToSize();
		in.close();
		return arraylist;
	}
	
	//create a bus object array given specified file GENERIC
	public static Object[] createArray(File file) throws IOException {
		ArrayList<Object> arraylist = createArraylist(file);
		Object[] busarray = convertArraylist(arraylist);
		return busarray;
	}
	
	//convert arraylist in order to make array GENERIC
	public static Object[] convertArraylist(ArrayList<Object> arraylist) {
		Object[] busarray = new BusInfo[arraylist.size()];
		
		arraylist.toArray(busarray);
		
		return busarray;
	}
	
	//creates a scanner object that is comma delimited for various STM file to 
	//avoid any kind of whitespace delimiting issues
	public static Scanner createScannerComma(File filename) throws FileNotFoundException {
		Scanner in = new Scanner(filename);
		in.useDelimiter(",");
		return in;
	}
	
	//This will generate time_differences for an array given the bus array
	//using procedural programming due to the need for checking other objects in array
	public static void generateTime(BusInfo[] array) {
		for(int i = 0; i < array.length-1; i++) {
			if(array[i].bus_id == array[i+1].bus_id) {
				array[i].time_difference = array[i+1].hour_time - array[i].hour_time;
			}
			else continue;
			
			//To account for zero times, we make it thirty seconds instead
			if(array[i].time_difference == 0.0) {
				array[i].time_difference = 0.5/60;
			}
		}
	}
	
	//SET UP TO GENERATE RIDERSHIP FILE WITH DISTANCES ADDED FROM GIS
	public static void main(String[] args) throws IOException {
		double time = System.currentTimeMillis();
		File file = new File("outputs//ridership_all.csv");
		
		Object[] array = createArray(file);
		
		BusInfo[] busarray = (BusInfo[])array;
		
		generateDistances(busarray);
				
		File newfile = new File("inputs//EF_test//distance_all_new.csv");
		PrintWriter out = new PrintWriter(newfile);
		
		out.println("List Number,Unknown,Specific Route 1,Specific Route 2,Bus ID,Arrival Time,Departure Time,Stop ID"
				+ ",Stop Sequence Number,Boarding,Alighting,Total On Bus,Waiting,Stop Line Factor,Distance");
		
		for(int i = 0; i < busarray.length; i++) {
			out.println(busarray[i].toString());
		}
		
		out.close();
		
		System.out.println("Time taken: " + (System.currentTimeMillis() - time)/1000 + " seconds");
		
	}

}